name: Build, Push & Deploy Backend

on:
  push:
    branches:
      - backend-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PORT: 4000
      NODE_ENV: production
      API_DEPLOYMENT_URL: http://api.medus.click
      CLIENT_DEPLOYMENT_URL: http://speedscore.medus.click
      COOKIE_DOMAIN: medus.click
      ACCESS_TOKEN_DURATION: 1d
      REFRESH_TOKEN_DURATION: 7d
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      MFA_ENCRYPTION_KEY: ${{ secrets.MFA_ENCRYPTION_KEY }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      SENDGRID_FROM_ADDRESS: ${{ secrets.SENDGRID_FROM_ADDRESS }}
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-west-2


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        env:
          NODE_ENV: development
        run: npm ci

      - name: Run tests
        env:
          NODE_ENV: test
          API_DEPLOYMENT_URL: http://localhost:4000
        run: |
          npm test -- src/tests/authRoutes/registerUser.test.js
          npm test -- src/tests/authRoutes/loginLogout.test.js

      - name: Log in to GHCR
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u meduscode --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/meduscode/speedscore-api:latest .
          docker push ghcr.io/meduscode/speedscore-api:latest

      - name: Install Pulumi dependencies
        working-directory: ./backend-infrastructure
        run: npm ci

      - name: Deploy backend to EKS with Pulumi
        uses: pulumi/actions@v4
        with:
          work-dir: ./backend-infrastructure
          command: up
          stack-name: dev
