name: Test, Build, Push & Deploy Backend

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - backend-deploy

env:
  PORT: 4000
  NODE_ENV: production
  API_DEPLOYMENT_URL: https://api.medus.click
  CLIENT_DEPLOYMENT_URL: https://speedscore.medus.click
  COOKIE_DOMAIN: .medus.click
  ACCESS_TOKEN_DURATION: 1d
  REFRESH_TOKEN_DURATION: 7d
  SENDGRID_FROM_ADDRESS: cs14394go@gmail.com
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  MFA_ENCRYPTION_KEY: ${{ secrets.MFA_ENCRYPTION_KEY }}
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
  GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
  certificateArn: ${{ secrets.CERTIFICATE_ARN }}
  github_actions_role_arn: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
  github_token: ${{ secrets.TOKEN }}
  github_username: meduscode
  domain: medus.click
  sub_domain: api
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

jobs:
  test:
    name: Run backend tests
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      API_DEPLOYMENT_URL: http://localhost:4000
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run auth tests
        run: |
          npm test -- src/tests/authRoutes/registerUser.test.js
          npm test -- src/tests/authRoutes/loginLogout.test.js

  build:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "$github_token" | docker login ghcr.io -u "$github_username" --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/$github_username/speedscore-api:latest .

      - name: Push Docker image
        run: docker push ghcr.io/$github_username/speedscore-api:latest

  deploy:
    name: Deploy backend to EKS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.github_actions_role_arn }}
          aws-region: us-west-2

      - name: Install Pulumi dependencies
        working-directory: ./backend-infrastructure
        run: npm ci

      - name: Configure Pulumi stack
        working-directory: ./backend-infrastructure
        run: |
          pulumi stack select dev
          pulumi config set aws:region us-west-2
          
          pulumi config set speedscore_backend:subDomain $sub_domain
          pulumi config set speedscore_backend:domain $domain
          pulumi config set --secret speedscore_backend:certificateArn "$certificateArn"
          pulumi config set --secret speedscore_backend:githubToken "$github_token"
          pulumi config set --secret speedscore_backend:githubActionRoleArn "$github_actions_role_arn"
          pulumi config set --secret speedscore_backend:githubUsername $github_username
          
          pulumi config set speedscore_backend:nodeEnv $NODE_ENV
          pulumi config set speedscore_backend:port $PORT
          pulumi config set speedscore_backend:cookieDomain $COOKIE_DOMAIN
          pulumi config set speedscore_backend:clientDeploymentUrl $CLIENT_DEPLOYMENT_URL
          pulumi config set speedscore_backend:accessTokenDuration $ACCESS_TOKEN_DURATION
          pulumi config set speedscore_backend:refreshTokenDuration $REFRESH_TOKEN_DURATION
          pulumi config set speedscore_backend:sendgridFromAddress $SENDGRID_FROM_ADDRESS
          pulumi config set --secret speedscore_backend:jwtSecret "$JWT_SECRET"
          pulumi config set --secret speedscore_backend:mongodbUri "$MONGODB_URI"
          pulumi config set --secret speedscore_backend:sessionSecret "$SESSION_SECRET"
          pulumi config set --secret speedscore_backend:mfaEncryptionKey "$MFA_ENCRYPTION_KEY"
          pulumi config set --secret speedscore_backend:sendgridApiKey "$SENDGRID_API_KEY"
          pulumi config set --secret speedscore_backend:ghClientId "$GH_CLIENT_ID"
          pulumi config set --secret speedscore_backend:ghClientSecret "$GH_CLIENT_SECRET"

      - name: Deploy to EKS
        uses: pulumi/actions@v4
        with:
          work-dir: ./backend-infrastructure
          command: up
          stack-name: MedusCode-org/speedscore_backend/dev
